// Decompiled by DJ v3.12.12.100 Copyright 2015 Atanas Neshkov  Date: 2019/7/24 9:36:32
// Home Page:  http://www.neshkov.com/dj.html - Check often for new version!
// Decompiler options: packimports(3) 
// Source File Name:   XkjtController.java

package com.seeyon.apps.xkjt.controller;

import com.seeyon.apps.xkjt.manager.XkjtManager;
import com.seeyon.ctp.common.AppContext;
import com.seeyon.ctp.common.authenticate.domain.User;
import com.seeyon.ctp.common.controller.BaseController;
import com.seeyon.ctp.common.exceptions.BusinessException;
import com.seeyon.ctp.common.filemanager.manager.FileManager;
import com.seeyon.ctp.common.po.filemanager.V3XFile;
import com.seeyon.ctp.organization.manager.OrgManager;
import com.seeyon.ctp.util.FlipInfo;
import java.util.*;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import org.apache.commons.logging.Log;
import org.apache.commons.logging.LogFactory;
import org.apache.logging.log4j.util.Strings;
import org.springframework.web.servlet.ModelAndView;

public class XkjtController extends BaseController
{

    public XkjtController()
    {
    }

    public ModelAndView allRoles(HttpServletRequest request, HttpServletResponse response)
    {
        User user = AppContext.getCurrentUser();
        ModelAndView mav = new ModelAndView("plugin/xkjt/member2role");
        mav.addObject("accountId", user.getAccountId());
        return mav;
    }

    public ModelAndView initList(HttpServletRequest request, HttpServletResponse response)
    {
        XkjtManager xkjtManager = (XkjtManager)AppContext.getBean("xkjtManager");
        User user = AppContext.getCurrentUser();
        OrgManager orgManager = (OrgManager)AppContext.getBean("orgManager");
        List xkjtLeaderDaiYues = new ArrayList();
        try
        {
            xkjtLeaderDaiYues = xkjtManager.findXkjtLeaderDaiYueByMemberId(user.getId());
        }
        catch(BusinessException e)
        {
            log.error("chenq----\u83B7\u53D6\u5F85\u9605\u51FA\u9519", e);
        }
        ModelAndView mav = new ModelAndView("plugin/xkjt/dai_yue");
        mav.addObject("xkjtLeaderDaiYues", xkjtLeaderDaiYues);
        return mav;
    }

    public ModelAndView daiYueMore(HttpServletRequest request, HttpServletResponse response)
    {
        ModelAndView mav = new ModelAndView("plugin/xkjt/dai_yue_more");
        XkjtManager xkjtManager = (XkjtManager)AppContext.getBean("xkjtManager");
        FlipInfo fi = new FlipInfo();
        Map params = new HashMap();
        try
        {
            xkjtManager.findMoreXkjtLeaderDaiYue(fi, params);
            request.setAttribute("ffdaiYueTable", fi);
        }
        catch(BusinessException e)
        {
            log.error("chenq--\u521D\u59CB\u5316\u66F4\u591A\u5F85\u9605\u6570\u636E\u5F02\u5E38", e);
        }
        return mav;
    }

    public ModelAndView initYiYueList(HttpServletRequest request, HttpServletResponse response)
    {
        XkjtManager xkjtManager = (XkjtManager)AppContext.getBean("xkjtManager");
        User user = AppContext.getCurrentUser();
        OrgManager orgManager = (OrgManager)AppContext.getBean("orgManager");
        List xkjtLeaderYiYues = new ArrayList();
        try
        {
            xkjtLeaderYiYues = xkjtManager.findXkjtLeaderYiYueByMemberId(user.getId());
        }
        catch(BusinessException e)
        {
            log.error("chenq----\u83B7\u53D6\u5DF2\u9605\u6570\u636E\u5931\u8D25", e);
        }
        ModelAndView mav = new ModelAndView("plugin/xkjt/yi_yue");
        mav.addObject("xkjtLeaderYiYues", xkjtLeaderYiYues);
        return mav;
    }

    public ModelAndView yiYueMore(HttpServletRequest request, HttpServletResponse response)
    {
        ModelAndView mav = new ModelAndView("plugin/xkjt/yi_yue_more");
        XkjtManager xkjtManager = (XkjtManager)AppContext.getBean("xkjtManager");
        FlipInfo fi = new FlipInfo();
        Map params = new HashMap();
        try
        {
            xkjtManager.findMoreXkjtLeaderYiYue(fi, params);
            request.setAttribute("ffyiYueTable", fi);
        }
        catch(BusinessException e)
        {
            log.error("chenq--\u521D\u59CB\u5316\u66F4\u591A\u5DF2\u9605\u6570\u636E\u5931\u8D25", e);
        }
        return mav;
    }

    public ModelAndView initBanJieList(HttpServletRequest request, HttpServletResponse response)
    {
        XkjtManager xkjtManager = (XkjtManager)AppContext.getBean("xkjtManager");
        User user = AppContext.getCurrentUser();
        OrgManager orgManager = (OrgManager)AppContext.getBean("orgManager");
        List xkjtLeaderBanJies = new ArrayList();
        try
        {
            xkjtLeaderBanJies = xkjtManager.findXkjtLeaderBanJieByMemberId(user.getId());
        }
        catch(BusinessException e)
        {
            log.error("chenq----\u83B7\u53D6\u529E\u7ED3\u51FA\u9519", e);
        }
        ModelAndView mav = new ModelAndView("plugin/xkjt/ban_jie");
        mav.addObject("xkjtLeaderBanJies", xkjtLeaderBanJies);
        return mav;
    }

    public ModelAndView banJieMore(HttpServletRequest request, HttpServletResponse response)
    {
        ModelAndView mav = new ModelAndView("plugin/xkjt/ban_jie_more");
        XkjtManager xkjtManager = (XkjtManager)AppContext.getBean("xkjtManager");
        FlipInfo fi = new FlipInfo();
        Map parameterMap = request.getParameterMap();
        Map params = new HashMap();
        try
        {
            xkjtManager.findMoreXkjtLeaderBanJie(fi, params);
            request.setAttribute("ffBanJieTable", fi);
        }
        catch(BusinessException e)
        {
            log.error("chenq--\u521D\u59CB\u5316\u66F4\u591A\u5DF2\u9605\u6570\u636E\u5931\u8D25", e);
        }
        return mav;
    }

    public ModelAndView showPdf(HttpServletRequest request, HttpServletResponse response)
    {
        ModelAndView mav = new ModelAndView("plugin/xkjt/webcontent");
        String fileId = request.getParameter("fileId");
        FileManager fileManager = (FileManager)AppContext.getBean("fileManager");
        try
        {
            if(Strings.isNotBlank(fileId) && fileManager != null)
            {
                V3XFile file = fileManager.getV3XFile(Long.valueOf(fileId));
                mav.addObject("xkjtFileId", file.getId());
                mav.addObject("xkjtCreateDate", file.getCreateDate());
            }
        }
        catch(Exception exception) { }
        return mav;
    }

    public static Log log = LogFactory.getLog(com/seeyon/apps/xkjt/controller/XkjtController);

}
